# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run lint
    - run: npm run build --if-present
    - run: npm run test
    - run: npm run test:mocha

    - name: Run integration tests - Manage Travels
      working-directory: ./app/travel_processor
      run: |
        npm ci
        npm run test:node -- --ci

  deployment:
    name: Deploy to BTP
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.ui_app_url }}
    concurrency: staging
    env:
      BTP_SUBACCOUNT_ID: ce45c62b-1233-46d8-a12f-c0af88118ff1
      CF_API: 'https://api.cf.eu10.hana.ondemand.com'
      CF_ORG: 36c55d9etrial
      CF_USERNAME: ${{ secrets.CF_USERNAME }}
      CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
    outputs:
      ui_app_url: ${{ steps.deploy.outputs.ui_app_url }}
    steps:
    - name: Set more variables
      run: |
        echo "CF_SPACE=$GITHUB_HEAD_REF" >> $GITHUB_ENV
        echo "SCOPE_ADMIN=sflight-admin-${GITHUB_HEAD_REF}" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - name: Setup BTP CLI  # https://blogs.sap.com/2021/09/01/sap-tech-bytes-btp-cli-installation/
      run: |
        curl --remote-name --location --url "https://raw.githubusercontent.com/SAP-samples/sap-tech-bytes/2021-09-01-btp-cli/getbtpcli"
        chmod +x getbtpcli
        echo | ./getbtpcli
    - name: MTA build
      run: npx mbt build -t gen --mtar sflight.mtar
    - name: CF Deploy
      id: deploy
      run: >
        docker run
        -e CF_API -e CF_ORG -e CF_SPACE -e CF_USERNAME -e CF_PASSWORD
        -v $PWD:/home/piper/app
        --user root
        ppiper/cf-cli
        bash -c '
          cf api $CF_API &&
          cf auth &&
          cf create-space "$CF_SPACE" -o "$CF_ORG" &&
          cf target -o "$CF_ORG" -s "$CF_SPACE" &&
          cf deploy app/gen/sflight.mtar -f &&
          cf install-plugin -r CF-Community "html5-plugin" -f &&
          cf html5-list -di sflight-destination-service -rt launchpad -u | grep -o "https.*\s" > app/url.txt
        ' &&
        echo "UI app URL is: $(cat url.txt)" &&
        echo "::set-output name=ui_app_url::$(cat url.txt)"
    - name: Assign Roles
      run: |
        ~/bin/btp login --user $CF_USERNAME --password $CF_PASSWORD --subdomain ${CF_ORG}-ga
        ~/bin/btp target --subaccount $BTP_SUBACCOUNT_ID
        ~/bin/btp assign security/role-collection "$SCOPE_ADMIN" --to-user $CF_USERNAME

  e2etest:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: deployment
    steps:
    - name: More UI tests
      run: |
        echo ${{ needs.deployment.outputs.ui_app_url }}
#       ...